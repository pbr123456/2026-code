#include <stdio.h>

int MidSearch(int *A,int *B,int len)
{
    //分别表示序列A和序列B的首位数，末位数和中位数，s是start的简写，d是end简写
    int s1=0,d1=len-1,m1,s2=0,d2=len-1,m2;
    //循环判断结束的条件是，两个数组均不断删除，最后君只能剩余一个元素
    while(s1 != d1 || s2 != d2)
    {
        m1 = (s1+d1)/2;
        m2 = (s2+d2)/2;
        if(A[m1] == B[m2])
            return A[m1];//找到了，也可以是返回B[m2]
        else if(A[m1] < B[m2])
        {
            if((s1+d1)%2==0){//若元素个数为奇数，==0是因为这里数组下标从0开始
                s1 = m1;//舍弃A中间点以前的部分且保留中间点
                d2 = m2;//舍弃B中间点以后的部分且保留中间点
            }
            else{//若元素为偶数
                s1 = m1+1;//舍弃A中间点以及中间点以前部分
                d2 = m2;//舍弃B中间点以后部分且保留中间点
            }
        }else{//这里的条件是A[m1]>B[m2]，刚好是对称的
            if((s1+d1)%2==0){//若元素个数为奇数，==0是因为这里数组下标从0开始
                d1 = m1;
                s2 = m2;
            }
            else{//若元素为偶数
                d1 = m1;
                s2 = m2+1;
            }
        }
    }
    return A[s1] < B[s2]? A[s1] : B[s2];//要拿小的那个
}

//2011-42 二分查找
int main() {
    int A[] = {11,13,15,17,19,27};
    int B[] = {2,4,6,8,20,23};
    int mid = MidSearch(A,B,6);
    printf("mid=%d\n",mid);
    return 0;
}
